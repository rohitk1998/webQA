{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\Inputs\\\\ProfessionSelect.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { FormControl, FormLabel, FormErrorMessage, Select } from \"@chakra-ui/react\";\nconst dropDown = [{\n  name: \"Select catagory\",\n  value: \"\"\n}, {\n  name: \"Accounting\",\n  value: \"ACCOUNTING\"\n}, {\n  name: \"Coaching\",\n  value: \"COACHING\"\n}, {\n  name: \"Consultant\",\n  value: \"CONSULTANT\"\n}, {\n  name: \"Construction\",\n  value: \"CONSTRUCTION\"\n}, {\n  name: \"Education\",\n  value: \"EDUCATION\"\n}, {\n  name: \"Engineering\",\n  value: \"ENGINEERING\"\n}, {\n  name: \"Financial\",\n  value: \"FINANCIAL\"\n}, {\n  name: \"Health Care\",\n  value: \"HEALTHCARE\"\n}, {\n  name: \"Home Services\",\n  value: \"HOMESERVICES\"\n}, {\n  name: \"Hospitality\",\n  value: \"HOSPITALITY\"\n}, {\n  name: \"Legal\",\n  value: \"LEGAL\"\n}, {\n  name: \"Manufacturing\",\n  value: \"MANUFACTURING\"\n}, {\n  name: \"Marketing\",\n  value: \"MARKETING\"\n}, {\n  name: \"Realstate\",\n  value: \"REALSTATE\"\n}, {\n  name: \"Restaurant\",\n  value: \"RESTAURANT\"\n}, {\n  name: \"Retail\",\n  value: \"RETAIL\"\n}, {\n  name: \"Technology\",\n  value: \"TECHNOLOGY\"\n}];\nexport const ProfessionSelectField = (_ref) => {\n  let {\n    label\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const [field, {\n    error\n  }] = useField(props);\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, label), __jsx(Select, _extends({\n    id: field.name\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), dropDown.map((d, index) => __jsx(\"option\", {\n    key: index,\n    value: d.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, d.name))), error ? __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  }, error) : null);\n};","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/Inputs/ProfessionSelect.tsx"],"names":["React","useField","FormControl","FormLabel","FormErrorMessage","Select","dropDown","name","value","ProfessionSelectField","label","props","field","error","map","d","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\n\r\ntype ProfessionSelectFieldProps = {\r\n  label: string;\r\n  name: string;\r\n};\r\n\r\nconst dropDown = [\r\n  { name: \"Select catagory\", value: \"\" },\r\n  { name: \"Accounting\", value: \"ACCOUNTING\" },\r\n  { name: \"Coaching\", value: \"COACHING\" },\r\n  { name: \"Consultant\", value: \"CONSULTANT\" },\r\n  { name: \"Construction\", value: \"CONSTRUCTION\" },\r\n  { name: \"Education\", value: \"EDUCATION\" },\r\n  { name: \"Engineering\", value: \"ENGINEERING\" },\r\n  { name: \"Financial\", value: \"FINANCIAL\" },\r\n  { name: \"Health Care\", value: \"HEALTHCARE\" },\r\n  { name: \"Home Services\", value: \"HOMESERVICES\" },\r\n  { name: \"Hospitality\", value: \"HOSPITALITY\" },\r\n  { name: \"Legal\", value: \"LEGAL\" },\r\n  { name: \"Manufacturing\", value: \"MANUFACTURING\" },\r\n  { name: \"Marketing\", value: \"MARKETING\" },\r\n  { name: \"Realstate\", value: \"REALSTATE\" },\r\n  { name: \"Restaurant\", value: \"RESTAURANT\" },\r\n  { name: \"Retail\", value: \"RETAIL\" },\r\n  { name: \"Technology\", value: \"TECHNOLOGY\" },\r\n];\r\n\r\nexport const ProfessionSelectField: React.FC<ProfessionSelectFieldProps> = ({\r\n  label,\r\n  ...props\r\n}) => {\r\n  const [field, { error }] = useField(props);\r\n  return (\r\n    <FormControl isInvalid={!!error}>\r\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\r\n      <Select id={field.name} {...field} {...props}>\r\n        {dropDown.map((d, index) => (\r\n          <option key={index} value={d.value}>\r\n            {d.name}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\r\n    </FormControl>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}