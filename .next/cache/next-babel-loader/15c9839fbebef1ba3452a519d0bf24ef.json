{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\UserMailActivity\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useMailActivityByIdQuery, useAllsubsIdQuery } from \"../../generated/graphql\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { useIsAuth } from \"../../utils/useIsAuth\";\nimport React, { useState, useEffect } from \"react\";\nimport ActivityCard from \"../Mail_Activity/ActivityCard\";\nimport ActivityChart from \"../Mail_Activity/ActivityChart\";\n\nvar UsersMailsActivities = function UsersMailsActivities(_ref) {\n  _s();\n\n  var _subsCount$data, _subsCount$data2, _subsCount$data3, _subsCount$data4;\n\n  var id = _ref.id;\n  useIsAuth();\n\n  var _useState = useState(0),\n      Delivered = _useState[0],\n      setDelivered = _useState[1];\n\n  var _useState2 = useState(0),\n      Opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  var _useState3 = useState(0),\n      Clicked = _useState3[0],\n      setClicked = _useState3[1];\n\n  var _useState4 = useState(0),\n      Bounces = _useState4[0],\n      setBounces = _useState4[1];\n\n  var _useState5 = useState(0),\n      SpamReports = _useState5[0],\n      setSpamReports = _useState5[1];\n\n  useIsAuth();\n\n  var _useMailActivityByIdQ = useMailActivityByIdQuery({\n    variables: {\n      id: id\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useMailActivityByIdQ.data,\n      error = _useMailActivityByIdQ.error,\n      loading = _useMailActivityByIdQ.loading,\n      fetchMore = _useMailActivityByIdQ.fetchMore,\n      variables = _useMailActivityByIdQ.variables;\n\n  var subsCount = useAllsubsIdQuery({\n    variables: {\n      Id: id\n    },\n    notifyOnNetworkStatusChange: true\n  });\n\n  if (!loading && !data) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"you got query failed for some reason\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, error === null || error === void 0 ? void 0 : error.message));\n  }\n\n  useEffect(function () {\n    if (data) {\n      var mailActivity = data.mailActivityById.mailActivity;\n      var _Delivered = [];\n      var _Opened = [];\n      var _Clicked = [];\n      var _Bounces = [];\n      var _SpamReports = [];\n      mailActivity.map(function (mail) {\n        _Opened.push(mail.open_count);\n\n        _Clicked.push(mail.clicks_count);\n\n        if (mail.Status === \"delivered\") {\n          _Delivered.push(mail);\n        }\n\n        if (mail.Status === \"bounce\") {\n          _Bounces.push(mail);\n        }\n\n        if (mail.Status === \"spamreport\") {\n          _SpamReports.push(mail);\n        }\n      });\n      setDelivered(_Delivered.length);\n      setOpened(_Opened.reduce(function (a, b) {\n        return a + b;\n      }, 0));\n      setClicked(_Clicked.reduce(function (a, b) {\n        return a + b;\n      }, 0));\n      setBounces(_Bounces.length);\n      setSpamReports(_SpamReports.length);\n    }\n  });\n\n  if (data) {\n    console.log(Delivered, Opened, Clicked, Bounces, SpamReports);\n  }\n\n  return __jsx(React.Fragment, null, !data ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"loading...\") : __jsx(React.Fragment, null, __jsx(ActivityCard, {\n    Delivered: Delivered,\n    Opened: Opened,\n    Clicked: Clicked,\n    Bounces: Bounces,\n    SpamReports: SpamReports,\n    ActiveCount: (_subsCount$data = subsCount.data) === null || _subsCount$data === void 0 ? void 0 : _subsCount$data.AllsubsId.ActiveCount,\n    NonActiveCount: (_subsCount$data2 = subsCount.data) === null || _subsCount$data2 === void 0 ? void 0 : _subsCount$data2.AllsubsId.NonActiveCount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), __jsx(ActivityChart, {\n    Delivered: Delivered,\n    Opened: Opened,\n    Clicked: Clicked,\n    Bounces: Bounces,\n    SpamReports: SpamReports,\n    ActiveCount: (_subsCount$data3 = subsCount.data) === null || _subsCount$data3 === void 0 ? void 0 : _subsCount$data3.AllsubsId.ActiveCount,\n    NonActiveCount: (_subsCount$data4 = subsCount.data) === null || _subsCount$data4 === void 0 ? void 0 : _subsCount$data4.AllsubsId.NonActiveCount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(UsersMailsActivities, \"KchMOCHOu6TRS6hLkyNScE5AzvU=\", false, function () {\n  return [useIsAuth, useIsAuth, useMailActivityByIdQuery, useAllsubsIdQuery];\n});\n\n_c = UsersMailsActivities;\nexport default withApollo({\n  ssr: false\n})(UsersMailsActivities);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersMailsActivities\");","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/UserMailActivity/index.tsx"],"names":["useMailActivityByIdQuery","useAllsubsIdQuery","withApollo","useIsAuth","React","useState","useEffect","ActivityCard","ActivityChart","UsersMailsActivities","id","Delivered","setDelivered","Opened","setOpened","Clicked","setClicked","Bounces","setBounces","SpamReports","setSpamReports","variables","notifyOnNetworkStatusChange","data","error","loading","fetchMore","subsCount","Id","message","mailActivity","mailActivityById","map","mail","push","open_count","clicks_count","Status","length","reduce","a","b","console","log","AllsubsId","ActiveCount","NonActiveCount","ssr"],"mappings":"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","sourcesContent":["import {\r\n  useMailActivityByIdQuery,\r\n  useAllsubsIdQuery,\r\n} from \"../../generated/graphql\";\r\nimport { withApollo } from \"../../utils/withApollo\";\r\nimport { useIsAuth } from \"../../utils/useIsAuth\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ActivityCard from \"../Mail_Activity/ActivityCard\";\r\nimport ActivityChart from \"../Mail_Activity/ActivityChart\";\r\n\r\ninterface UserActivityProps {\r\n  id: number;\r\n}\r\n\r\nconst UsersMailsActivities: React.FC<UserActivityProps> = ({ id }) => {\r\n  useIsAuth();\r\n  const [Delivered, setDelivered] = useState(0);\r\n  const [Opened, setOpened] = useState(0);\r\n  const [Clicked, setClicked] = useState(0);\r\n  const [Bounces, setBounces] = useState(0);\r\n  const [SpamReports, setSpamReports] = useState(0);\r\n  useIsAuth();\r\n  const {\r\n    data,\r\n    error,\r\n    loading,\r\n    fetchMore,\r\n    variables,\r\n  } = useMailActivityByIdQuery({\r\n    variables: {\r\n      id: id,\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  const subsCount = useAllsubsIdQuery({\r\n    variables: {\r\n      Id: id,\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  if (!loading && !data) {\r\n    return (\r\n      <div>\r\n        <div>you got query failed for some reason</div>\r\n        <div>{error?.message}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const mailActivity: any = data!.mailActivityById.mailActivity;\r\n      let Delivered: any = [];\r\n      let Opened: any = [];\r\n      let Clicked: any = [];\r\n      let Bounces: any = [];\r\n      let SpamReports: any = [];\r\n\r\n      mailActivity.map((mail: any) => {\r\n        Opened.push(mail.open_count);\r\n        Clicked.push(mail.clicks_count);\r\n\r\n        if (mail.Status === \"delivered\") {\r\n          Delivered.push(mail);\r\n        }\r\n        if (mail.Status === \"bounce\") {\r\n          Bounces.push(mail);\r\n        }\r\n        if (mail.Status === \"spamreport\") {\r\n          SpamReports.push(mail);\r\n        }\r\n      });\r\n      setDelivered(Delivered.length);\r\n      setOpened(Opened.reduce((a: any, b: any) => a + b, 0));\r\n      setClicked(Clicked.reduce((a: any, b: any) => a + b, 0));\r\n      setBounces(Bounces.length);\r\n      setSpamReports(SpamReports.length);\r\n    }\r\n  });\r\n  if (data) {\r\n    console.log(Delivered, Opened, Clicked, Bounces, SpamReports);\r\n  }\r\n  return (\r\n    <>\r\n      {!data ? (\r\n        <div>loading...</div>\r\n      ) : (\r\n        <>\r\n          <ActivityCard\r\n            Delivered={Delivered}\r\n            Opened={Opened}\r\n            Clicked={Clicked}\r\n            Bounces={Bounces}\r\n            SpamReports={SpamReports}\r\n            ActiveCount={subsCount.data?.AllsubsId.ActiveCount}\r\n            NonActiveCount={subsCount.data?.AllsubsId.NonActiveCount}\r\n          />\r\n\r\n          <ActivityChart\r\n            Delivered={Delivered}\r\n            Opened={Opened}\r\n            Clicked={Clicked}\r\n            Bounces={Bounces}\r\n            SpamReports={SpamReports}\r\n            ActiveCount={subsCount.data?.AllsubsId.ActiveCount}\r\n            NonActiveCount={subsCount.data?.AllsubsId.NonActiveCount}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withApollo({ ssr: false })(UsersMailsActivities);\r\n"]},"metadata":{},"sourceType":"module"}