{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\Mail_Activity\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport { useMailActivityQuery, useAllsubsQuery } from \"../../generated/graphql\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { useIsAuth } from \"../../utils/useIsAuth\";\nimport React, { useState, useEffect } from \"react\";\nimport ActivityCard from \"./ActivityCard\";\nimport ActivityChart from \"./ActivityChart\";\n\nconst EMailActivity = () => {\n  var _subsCount$data, _subsCount$data2, _subsCount$data3, _subsCount$data4;\n\n  useIsAuth();\n  const {\n    0: Delivered,\n    1: setDelivered\n  } = useState(0);\n  const {\n    0: Opened,\n    1: setOpened\n  } = useState(0);\n  const {\n    0: Clicked,\n    1: setClicked\n  } = useState(0);\n  const {\n    0: Bounces,\n    1: setBounces\n  } = useState(0);\n  const {\n    0: SpamReports,\n    1: setSpamReports\n  } = useState(0);\n  useIsAuth();\n  const {\n    data,\n    error,\n    loading,\n    fetchMore,\n    variables\n  } = useMailActivityQuery();\n  const subsCount = useAllsubsQuery();\n\n  if (!loading && !data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"you got query failed for some reason\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, error === null || error === void 0 ? void 0 : error.message));\n  }\n\n  useEffect(() => {\n    if (data) {\n      const mailActivity = data.mailActivity.mailActivity;\n      let Delivered = [];\n      let Opened = [];\n      let Clicked = [];\n      let Bounces = [];\n      let SpamReports = [];\n      mailActivity.map(mail => {\n        Opened.push(mail.open_count);\n        Clicked.push(mail.clicks_count);\n\n        if (mail.Status === \"delivered\") {\n          Delivered.push(mail);\n        }\n\n        if (mail.Status === \"bounce\") {\n          Bounces.push(mail);\n        }\n\n        if (mail.Status === \"spamreport\") {\n          SpamReports.push(mail);\n        }\n      });\n      setDelivered(Delivered.length);\n      setOpened(Opened.reduce((a, b) => a + b, 0));\n      setClicked(Clicked.reduce((a, b) => a + b, 0));\n      setBounces(Bounces.length);\n      setSpamReports(SpamReports.length);\n    }\n  });\n\n  if (data) {\n    console.log(Delivered, Opened, Clicked, Bounces, SpamReports);\n  }\n\n  return __jsx(React.Fragment, null, !data ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"loading...\") : __jsx(React.Fragment, null, __jsx(ActivityCard, {\n    Delivered: Delivered,\n    Opened: Opened,\n    Clicked: Clicked,\n    Bounces: Bounces,\n    SpamReports: SpamReports,\n    ActiveCount: (_subsCount$data = subsCount.data) === null || _subsCount$data === void 0 ? void 0 : _subsCount$data.Allsubs.ActiveCount,\n    NonActiveCount: (_subsCount$data2 = subsCount.data) === null || _subsCount$data2 === void 0 ? void 0 : _subsCount$data2.Allsubs.NonActiveCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(ActivityChart, {\n    Delivered: Delivered,\n    Opened: Opened,\n    Clicked: Clicked,\n    Bounces: Bounces,\n    SpamReports: SpamReports,\n    ActiveCount: (_subsCount$data3 = subsCount.data) === null || _subsCount$data3 === void 0 ? void 0 : _subsCount$data3.Allsubs.ActiveCount,\n    NonActiveCount: (_subsCount$data4 = subsCount.data) === null || _subsCount$data4 === void 0 ? void 0 : _subsCount$data4.Allsubs.NonActiveCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default withApollo({\n  ssr: false\n})(EMailActivity);","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/Mail_Activity/index.tsx"],"names":["useMailActivityQuery","useAllsubsQuery","withApollo","useIsAuth","React","useState","useEffect","ActivityCard","ActivityChart","EMailActivity","Delivered","setDelivered","Opened","setOpened","Clicked","setClicked","Bounces","setBounces","SpamReports","setSpamReports","data","error","loading","fetchMore","variables","subsCount","message","mailActivity","map","mail","push","open_count","clicks_count","Status","length","reduce","a","b","console","log","Allsubs","ActiveCount","NonActiveCount","ssr"],"mappings":";;AAAA,SAASA,oBAAT,EAA+BC,eAA/B,QAAsD,yBAAtD;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1BN,EAAAA,SAAS;AACT,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACa,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACAF,EAAAA,SAAS;AACT,QAAM;AAAEiB,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAiDxB,oBAAoB,EAA3E;AAEA,QAAMyB,SAAS,GAAGxB,eAAe,EAAjC;;AAEA,MAAI,CAACqB,OAAD,IAAY,CAACF,IAAjB,EAAuB;AACrB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEK,OAAb,CAFF,CADF;AAMD;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,IAAJ,EAAU;AACR,YAAMO,YAAiB,GAAGP,IAAI,CAAEO,YAAN,CAAmBA,YAA7C;AACA,UAAIjB,SAAc,GAAG,EAArB;AACA,UAAIE,MAAW,GAAG,EAAlB;AACA,UAAIE,OAAY,GAAG,EAAnB;AACA,UAAIE,OAAY,GAAG,EAAnB;AACA,UAAIE,WAAgB,GAAG,EAAvB;AAEAS,MAAAA,YAAY,CAACC,GAAb,CAAkBC,IAAD,IAAe;AAC9BjB,QAAAA,MAAM,CAACkB,IAAP,CAAYD,IAAI,CAACE,UAAjB;AACAjB,QAAAA,OAAO,CAACgB,IAAR,CAAaD,IAAI,CAACG,YAAlB;;AAEA,YAAIH,IAAI,CAACI,MAAL,KAAgB,WAApB,EAAiC;AAC/BvB,UAAAA,SAAS,CAACoB,IAAV,CAAeD,IAAf;AACD;;AACD,YAAIA,IAAI,CAACI,MAAL,KAAgB,QAApB,EAA8B;AAC5BjB,UAAAA,OAAO,CAACc,IAAR,CAAaD,IAAb;AACD;;AACD,YAAIA,IAAI,CAACI,MAAL,KAAgB,YAApB,EAAkC;AAChCf,UAAAA,WAAW,CAACY,IAAZ,CAAiBD,IAAjB;AACD;AACF,OAbD;AAcAlB,MAAAA,YAAY,CAACD,SAAS,CAACwB,MAAX,CAAZ;AACArB,MAAAA,SAAS,CAACD,MAAM,CAACuB,MAAP,CAAc,CAACC,CAAD,EAASC,CAAT,KAAoBD,CAAC,GAAGC,CAAtC,EAAyC,CAAzC,CAAD,CAAT;AACAtB,MAAAA,UAAU,CAACD,OAAO,CAACqB,MAAR,CAAe,CAACC,CAAD,EAASC,CAAT,KAAoBD,CAAC,GAAGC,CAAvC,EAA0C,CAA1C,CAAD,CAAV;AACApB,MAAAA,UAAU,CAACD,OAAO,CAACkB,MAAT,CAAV;AACAf,MAAAA,cAAc,CAACD,WAAW,CAACgB,MAAb,CAAd;AACD;AACF,GA7BQ,CAAT;;AA8BA,MAAId,IAAJ,EAAU;AACRkB,IAAAA,OAAO,CAACC,GAAR,CAAY7B,SAAZ,EAAuBE,MAAvB,EAA+BE,OAA/B,EAAwCE,OAAxC,EAAiDE,WAAjD;AACD;;AAED,SACE,4BACG,CAACE,IAAD,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC,4BACE,MAAC,YAAD;AACE,IAAA,SAAS,EAAEV,SADb;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,OAAO,EAAEE,OAHX;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,WAAW,EAAEE,WALf;AAME,IAAA,WAAW,qBAAEO,SAAS,CAACL,IAAZ,oDAAE,gBAAgBoB,OAAhB,CAAyBC,WANxC;AAOE,IAAA,cAAc,sBAAEhB,SAAS,CAACL,IAAZ,qDAAE,iBAAgBoB,OAAhB,CAAyBE,cAP3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,MAAC,aAAD;AACE,IAAA,SAAS,EAAEhC,SADb;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,OAAO,EAAEE,OAHX;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,WAAW,EAAEE,WALf;AAME,IAAA,WAAW,sBAAEO,SAAS,CAACL,IAAZ,qDAAE,iBAAgBoB,OAAhB,CAAyBC,WANxC;AAOE,IAAA,cAAc,sBAAEhB,SAAS,CAACL,IAAZ,qDAAE,iBAAgBoB,OAAhB,CAAyBE,cAP3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAJJ,CADF;AA6BD,CApFD;;AAsFA,eAAexC,UAAU,CAAC;AAAEyC,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BlC,aAA3B,CAAf","sourcesContent":["import { useMailActivityQuery, useAllsubsQuery } from \"../../generated/graphql\";\r\nimport { withApollo } from \"../../utils/withApollo\";\r\nimport { useIsAuth } from \"../../utils/useIsAuth\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport ActivityChart from \"./ActivityChart\";\r\n\r\nconst EMailActivity = () => {\r\n  useIsAuth();\r\n  const [Delivered, setDelivered] = useState(0);\r\n  const [Opened, setOpened] = useState(0);\r\n  const [Clicked, setClicked] = useState(0);\r\n  const [Bounces, setBounces] = useState(0);\r\n  const [SpamReports, setSpamReports] = useState(0);\r\n  useIsAuth();\r\n  const { data, error, loading, fetchMore, variables } = useMailActivityQuery();\r\n\r\n  const subsCount = useAllsubsQuery();\r\n\r\n  if (!loading && !data) {\r\n    return (\r\n      <div>\r\n        <div>you got query failed for some reason</div>\r\n        <div>{error?.message}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const mailActivity: any = data!.mailActivity.mailActivity;\r\n      let Delivered: any = [];\r\n      let Opened: any = [];\r\n      let Clicked: any = [];\r\n      let Bounces: any = [];\r\n      let SpamReports: any = [];\r\n\r\n      mailActivity.map((mail: any) => {\r\n        Opened.push(mail.open_count);\r\n        Clicked.push(mail.clicks_count);\r\n\r\n        if (mail.Status === \"delivered\") {\r\n          Delivered.push(mail);\r\n        }\r\n        if (mail.Status === \"bounce\") {\r\n          Bounces.push(mail);\r\n        }\r\n        if (mail.Status === \"spamreport\") {\r\n          SpamReports.push(mail);\r\n        }\r\n      });\r\n      setDelivered(Delivered.length);\r\n      setOpened(Opened.reduce((a: any, b: any) => a + b, 0));\r\n      setClicked(Clicked.reduce((a: any, b: any) => a + b, 0));\r\n      setBounces(Bounces.length);\r\n      setSpamReports(SpamReports.length);\r\n    }\r\n  });\r\n  if (data) {\r\n    console.log(Delivered, Opened, Clicked, Bounces, SpamReports);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!data ? (\r\n        <div>loading...</div>\r\n      ) : (\r\n        <>\r\n          <ActivityCard\r\n            Delivered={Delivered}\r\n            Opened={Opened}\r\n            Clicked={Clicked}\r\n            Bounces={Bounces}\r\n            SpamReports={SpamReports}\r\n            ActiveCount={subsCount.data?.Allsubs!.ActiveCount}\r\n            NonActiveCount={subsCount.data?.Allsubs!.NonActiveCount}\r\n          />\r\n\r\n          <ActivityChart\r\n            Delivered={Delivered}\r\n            Opened={Opened}\r\n            Clicked={Clicked}\r\n            Bounces={Bounces}\r\n            SpamReports={SpamReports}\r\n            ActiveCount={subsCount.data?.Allsubs!.ActiveCount}\r\n            NonActiveCount={subsCount.data?.Allsubs!.NonActiveCount}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withApollo({ ssr: false })(EMailActivity);\r\n"]},"metadata":{},"sourceType":"module"}