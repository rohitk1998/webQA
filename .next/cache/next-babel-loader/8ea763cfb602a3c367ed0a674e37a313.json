{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\Inputs\\\\InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useField } from 'formik';\nimport { FormControl, FormLabel, Input, FormErrorMessage } from '@chakra-ui/react';\nexport var InputField = function InputField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      textarea = _ref.textarea,\n      _ = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"label\", \"textarea\", \"size\"]);\n\n  var InputOrTextarea = Input;\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    maxWidth: \"500px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, label), __jsx(InputOrTextarea, _extends({}, field, props, {\n    id: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }\n  }, error) : null);\n};\n\n_s(InputField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/Inputs/InputField.tsx"],"names":["React","useField","FormControl","FormLabel","Input","FormErrorMessage","InputField","label","textarea","_","size","props","InputOrTextarea","field","error","name"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,gBAJF,QAMO,kBANP;AAcA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAK/C;AAAA;;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFEC,CAEF,QAFJC,IAEI;AAAA,MADDC,KACC;;AACJ,MAAIC,eAAe,GAAGR,KAAtB;;AADI,kBAGuBH,QAAQ,CAACU,KAAD,CAH/B;AAAA;AAAA,MAGGE,KAHH;AAAA,MAGYC,KAHZ,iBAGYA,KAHZ;;AAIJ,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAiC,IAAA,QAAQ,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCR,KAAjC,CADF,EAEE,MAAC,eAAD,eAAqBM,KAArB,EAAgCF,KAAhC;AAAuC,IAAA,EAAE,EAAEE,KAAK,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGD,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH1D,CADF;AAOD,CAhBM;;GAAMR,U;UAQgBL,Q;;;KARhBK,U","sourcesContent":["import React, { InputHTMLAttributes } from 'react';\r\nimport { useField } from 'formik';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Textarea,\r\n} from '@chakra-ui/react';\r\n\r\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\r\n  label: string;\r\n  name: string;\r\n  textarea?: boolean;\r\n};\r\n\r\nexport const InputField: React.FC<InputFieldProps> = ({\r\n  label,\r\n  textarea,\r\n  size: _,\r\n  ...props\r\n}) => {\r\n  let InputOrTextarea = Input;\r\n\r\n  const [field, { error }] = useField(props);\r\n  return (\r\n    <FormControl isInvalid={!!error} maxWidth='500px'>\r\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\r\n      <InputOrTextarea {...field} {...props} id={field.name} />\r\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\r\n    </FormControl>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}