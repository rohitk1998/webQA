{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\Drawer.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Flex, Icon, Img, useDisclosure, Drawer, DrawerBody, DrawerContent, DrawerOverlay, Button, DrawerCloseButton, IconButton } from \"@chakra-ui/react\";\nimport { MdHome, MdEmail, MdEventNote } from \"react-icons/md\";\nimport { ImUsers, ImQuotesRight } from \"react-icons/im\";\nimport ActiveLink from \"./ActiveLink\";\nimport { useMeQuery } from \"../generated/graphql\";\nimport { isServer } from \"../utils/isServer\";\nimport { ProfileAvatar } from \"./Profile/ProfileAvatar\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nexport const DrawerBar = () => {\n  var _data$me, _data$me2;\n\n  const {\n    data,\n    loading\n  } = useMeQuery({\n    skip: isServer()\n  });\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  let quote = null;\n  let mailActivity = null;\n  let messages = null;\n  let usermailActivity = null;\n  let usermessages = null;\n  let tempalte = null;\n\n  if (loading) {} else if ((data === null || data === void 0 ? void 0 : (_data$me = data.me) === null || _data$me === void 0 ? void 0 : _data$me.role) !== \"admin\") {\n    usermessages = __jsx(ActiveLink, {\n      href: \"/UserMessages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(Icon, {\n      as: MdEmail,\n      mr: 2,\n      mb: \"2px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), \"Messages\");\n  } else {\n    messages = __jsx(ActiveLink, {\n      href: \"/messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, __jsx(Icon, {\n      as: MdEmail,\n      mr: 2,\n      mb: \"2px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), \"Messages\");\n    quote = __jsx(ActiveLink, {\n      href: \"/quotes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, __jsx(Icon, {\n      as: ImQuotesRight,\n      mr: 2,\n      mb: \"5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), \"Quotes\");\n    tempalte = __jsx(ActiveLink, {\n      href: \"/templates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, __jsx(Icon, {\n      as: MdEventNote,\n      mr: 2,\n      mb: \"5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), \"Templates\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    as: IconButton,\n    \"aria-label\": \"Options\",\n    icon: __jsx(HamburgerIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }),\n    display: {\n      lg: \"none\"\n    },\n    visibility: {\n      lg: \"hidden\"\n    },\n    variant: \"outline\",\n    bg: \"yellow\",\n    onClick: onOpen,\n    mt: 2,\n    ml: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), __jsx(Drawer, {\n    onClose: onClose,\n    isOpen: isOpen,\n    size: \"full\",\n    placement: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(DrawerOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(DrawerContent, {\n    bg: \"gray.200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(DrawerCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), __jsx(DrawerBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(Flex, {\n    height: {\n      base: \"100%\"\n    },\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    mx: \"auto\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, __jsx(Flex, {\n    mt: {\n      base: \"0\",\n      md: \"30px\",\n      lg: \"30px\"\n    },\n    fontWeight: 600,\n    fontSize: 19,\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(Img, {\n    boxSize: \"130px\" // w=\"50%\"\n    ,\n    w: \"250px\",\n    objectFit: \"cover\",\n    src: \"/static/QA_Cursive_Logo.png\",\n    alt: \"Logo\",\n    mx: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }), __jsx(Flex, {\n    flexDirection: \"column\",\n    mx: \"auto\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, __jsx(ActiveLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, __jsx(Icon, {\n    as: MdHome,\n    mr: 2,\n    mb: \"5px\",\n    mx: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }), \"Dashboard\"), __jsx(ActiveLink, {\n    href: \"/contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, __jsx(Icon, {\n    as: ImUsers,\n    mr: 2,\n    mb: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }), \"Contacts\"), usermessages, tempalte, messages, quote)), __jsx(Flex, {\n    mb: 32,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, data && __jsx(ProfileAvatar, {\n    email: (_data$me2 = data.me) === null || _data$me2 === void 0 ? void 0 : _data$me2.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 28\n    }\n  }))), \" \")))));\n};","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/Drawer.tsx"],"names":["React","Flex","Icon","Img","useDisclosure","Drawer","DrawerBody","DrawerContent","DrawerOverlay","Button","DrawerCloseButton","IconButton","MdHome","MdEmail","MdEventNote","ImUsers","ImQuotesRight","ActiveLink","useMeQuery","isServer","ProfileAvatar","HamburgerIcon","DrawerBar","data","loading","skip","isOpen","onOpen","onClose","quote","mailActivity","messages","usermailActivity","usermessages","tempalte","me","role","lg","base","md","email"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Flex,\r\n  Icon,\r\n  Img,\r\n  useDisclosure,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerOverlay,\r\n  Button,\r\n  DrawerCloseButton,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\nimport { MdHome, MdEmail, MdEventNote, MdNote } from \"react-icons/md\";\r\nimport { ImUsers, ImQuotesRight, ImBookmark } from \"react-icons/im\";\r\nimport ActiveLink from \"./ActiveLink\";\r\nimport { useMeQuery } from \"../generated/graphql\";\r\nimport { isServer } from \"../utils/isServer\";\r\nimport { ProfileAvatar } from \"./Profile/ProfileAvatar\";\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\n\r\nexport const DrawerBar = () => {\r\n  const { data, loading } = useMeQuery({\r\n    skip: isServer(),\r\n  });\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  let quote = null;\r\n  let mailActivity = null;\r\n  let messages = null;\r\n  let usermailActivity = null;\r\n  let usermessages = null;\r\n  let tempalte = null;\r\n\r\n  if (loading) {\r\n  } else if (data?.me?.role !== \"admin\") {\r\n    usermessages = (\r\n      <ActiveLink href=\"/UserMessages\">\r\n        <Icon as={MdEmail} mr={2} mb=\"2px\" />\r\n        Messages\r\n      </ActiveLink>\r\n    );\r\n  } else {\r\n    messages = (\r\n      <ActiveLink href=\"/messages\">\r\n        <Icon as={MdEmail} mr={2} mb=\"2px\" />\r\n        Messages\r\n      </ActiveLink>\r\n    );\r\n    quote = (\r\n      <ActiveLink href=\"/quotes\">\r\n        <Icon as={ImQuotesRight} mr={2} mb=\"5px\" />\r\n        Quotes\r\n      </ActiveLink>\r\n    );\r\n\r\n    tempalte = (\r\n      <ActiveLink href=\"/templates\">\r\n        <Icon as={MdEventNote} mr={2} mb=\"5px\" />\r\n        Templates\r\n      </ActiveLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        as={IconButton}\r\n        aria-label=\"Options\"\r\n        icon={<HamburgerIcon />}\r\n        display={{ lg: \"none\" }}\r\n        visibility={{ lg: \"hidden\" }}\r\n        variant=\"outline\"\r\n        bg=\"yellow\"\r\n        onClick={onOpen}\r\n        mt={2}\r\n        ml={2}\r\n      />\r\n      <Drawer onClose={onClose} isOpen={isOpen} size=\"full\" placement=\"left\">\r\n        <DrawerOverlay>\r\n          <DrawerContent bg=\"gray.200\">\r\n            <DrawerCloseButton />\r\n            <DrawerBody>\r\n              <Flex\r\n                height={{ base: \"100%\" }}\r\n                flexDirection=\"column\"\r\n                justifyContent=\"space-between\"\r\n                mx=\"auto\"\r\n                mt={4}\r\n              >\r\n                <Flex\r\n                  mt={{ base: \"0\", md: \"30px\", lg: \"30px\" }}\r\n                  fontWeight={600}\r\n                  fontSize={19}\r\n                  flexDirection=\"column\"\r\n                >\r\n                  <Img\r\n                    boxSize=\"130px\" \r\n                    // w=\"50%\"\r\n                    w='250px'\r\n                    objectFit=\"cover\"\r\n                    src=\"/static/QA_Cursive_Logo.png\"\r\n                    alt=\"Logo\"\r\n                    mx=\"auto\"\r\n                  />\r\n                  <Flex flexDirection=\"column\" mx=\"auto\" mt={4}>\r\n                    <ActiveLink href=\"/\">\r\n                      <Icon as={MdHome} mr={2} mb=\"5px\" mx=\"auto\" />\r\n                      Dashboard\r\n                    </ActiveLink>\r\n                    <ActiveLink href=\"/contacts\">\r\n                      <Icon as={ImUsers} mr={2} mb=\"5px\" />\r\n                      Contacts\r\n                    </ActiveLink>\r\n                    {/* for users */}\r\n                    {usermessages}\r\n\r\n                    {/* For admin */}\r\n                    {tempalte}\r\n                    {messages}\r\n                    {quote}\r\n                  </Flex>\r\n                </Flex>\r\n                <Flex mb={32} justifyContent=\"flex-end\">\r\n                  {data && <ProfileAvatar email={data.me?.email} />}\r\n                </Flex>\r\n              </Flex>{\" \"}\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}