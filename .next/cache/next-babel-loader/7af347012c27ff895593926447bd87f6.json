{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\Subscriber\\\\DeleteSubcriber.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { Box, IconButton, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay, Button } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { useDeleteSubMutation, useMeQuery } from '../../generated/graphql';\nexport const DeleteSubButtons = ({\n  id,\n  creatorId\n}) => {\n  var _meData$me;\n\n  const {\n    data: meData\n  } = useMeQuery();\n  const [deleteSub] = useDeleteSubMutation();\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = useRef(null);\n\n  if ((meData === null || meData === void 0 ? void 0 : (_meData$me = meData.me) === null || _meData$me === void 0 ? void 0 : _meData$me.id) !== creatorId) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    icon: __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }),\n    \"aria-label\": \"Delete Subcriber\",\n    onClick: () => setIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), __jsx(AlertDialog, {\n    isOpen: isOpen,\n    leastDestructiveRef: cancelRef,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(AlertDialogOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(AlertDialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(AlertDialogHeader, {\n    fontSize: \"lg\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Delete Customer\"), __jsx(AlertDialogBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Are you sure? You can't undo this action afterwards.\"), __jsx(AlertDialogFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    colorScheme: \"red\",\n    onClick: async () => {\n      await deleteSub({\n        variables: {\n          id\n        },\n        update: cache => {\n          cache.evict({\n            id: 'Sub:' + id\n          });\n        }\n      });\n      onClose();\n    },\n    ml: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Delete\"))))));\n};","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/Subscriber/DeleteSubcriber.tsx"],"names":["React","useRef","Box","IconButton","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","Button","DeleteIcon","useDeleteSubMutation","useMeQuery","DeleteSubButtons","id","creatorId","data","meData","deleteSub","isOpen","setIsOpen","useState","onClose","cancelRef","me","variables","update","cache","evict"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SACEC,GADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,iBANF,EAOEC,kBAPF,EAQEC,kBARF,EASEC,MATF,QAUO,kBAVP;AAWA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,oBAAT,EAA+BC,UAA/B,QAAiD,yBAAjD;AAOA,OAAO,MAAMC,gBAAiD,GAAG,CAAC;AAChEC,EAAAA,EADgE;AAEhEC,EAAAA;AAFgE,CAAD,KAG3D;AAAA;;AACJ,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAmBL,UAAU,EAAnC;AACA,QAAM,CAACM,SAAD,IAAcP,oBAAoB,EAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBrB,KAAK,CAACsB,QAAN,CAAe,KAAf,CAA5B;;AACA,QAAMC,OAAO,GAAG,MAAMF,SAAS,CAAC,KAAD,CAA/B;;AAEA,QAAMG,SAAS,GAAGvB,MAAM,CAAiB,IAAjB,CAAxB;;AAEA,MAAI,CAAAiB,MAAM,SAAN,IAAAA,MAAM,WAAN,0BAAAA,MAAM,CAAEO,EAAR,0DAAYV,EAAZ,MAAmBC,SAAvB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,SACE,4BACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEE,kBAAW,kBAFb;AAGE,IAAA,OAAO,EAAE,MAAMK,SAAS,CAAC,IAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,MAAC,WAAD;AACE,IAAA,MAAM,EAAED,MADV;AAEE,IAAA,mBAAmB,EAAEI,SAFvB;AAGE,IAAA,OAAO,EAAED,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,IAA5B;AAAiC,IAAA,UAAU,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAKE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DALF,EASE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,MAAD;AACE,IAAA,WAAW,EAAC,KADd;AAEE,IAAA,OAAO,EAAE,YAAY;AACnB,YAAMJ,SAAS,CAAC;AACdO,QAAAA,SAAS,EAAE;AAAEX,UAAAA;AAAF,SADG;AAEdY,QAAAA,MAAM,EAAGC,KAAD,IAAW;AACjBA,UAAAA,KAAK,CAACC,KAAN,CAAY;AAAEd,YAAAA,EAAE,EAAE,SAASA;AAAf,WAAZ;AACD;AAJa,OAAD,CAAf;AAMAQ,MAAAA,OAAO;AACR,KAVH;AAWE,IAAA,EAAE,EAAE,CAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CATF,CADF,CALF,CARF,CADF;AA+CD,CA9DM","sourcesContent":["import React, { useRef } from 'react';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Button,\r\n} from '@chakra-ui/react';\r\nimport { DeleteIcon } from '@chakra-ui/icons';\r\nimport { useDeleteSubMutation, useMeQuery } from '../../generated/graphql';\r\n\r\ninterface DeleteSubButtonsProps {\r\n  id: number;\r\n  creatorId: number;\r\n}\r\n\r\nexport const DeleteSubButtons: React.FC<DeleteSubButtonsProps> = ({\r\n  id,\r\n  creatorId,\r\n}) => {\r\n  const { data: meData } = useMeQuery();\r\n  const [deleteSub] = useDeleteSubMutation();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n\r\n  const cancelRef = useRef<HTMLDivElement>(null);\r\n\r\n  if (meData?.me?.id !== creatorId) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <IconButton\r\n          icon={<DeleteIcon />}\r\n          aria-label='Delete Subcriber'\r\n          onClick={() => setIsOpen(true)}\r\n        />\r\n      </Box>\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onClose}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize='lg' fontWeight='bold'>\r\n              Delete Customer\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button onClick={onClose}>Cancel</Button>\r\n              <Button\r\n                colorScheme='red'\r\n                onClick={async () => {\r\n                  await deleteSub({\r\n                    variables: { id },\r\n                    update: (cache) => {\r\n                      cache.evict({ id: 'Sub:' + id });\r\n                    },\r\n                  });\r\n                  onClose();\r\n                }}\r\n                ml={3}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}