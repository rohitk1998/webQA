{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\pages\\\\finish.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport { InputField } from \"../components/Inputs/InputField\";\nimport { ProfessionSelectField } from \"../components/Inputs/ProfessionSelect\";\nimport { useUpdateUserMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport Cookies from \"js-cookie\";\n\nvar Finish = function Finish() {\n  _s();\n\n  var _useUpdateUserMutatio = useUpdateUserMutation(),\n      _useUpdateUserMutatio2 = _slicedToArray(_useUpdateUserMutatio, 1),\n      updateUser = _useUpdateUserMutatio2[0];\n\n  var router = useRouter();\n  var name = \"\";\n\n  if (Cookies.get(\"name\")) {\n    name = Cookies.get(\"name\");\n  }\n\n  Cookies.remove(\"name\");\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    mb: 6,\n    pr: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      name: name,\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      title: \"\",\n      catagory: \"\",\n      company: \"\",\n      twitter: \"\",\n      facebook: \"\",\n      website: \"\",\n      linkedIn: \"\",\n      DefaultTemplates: false\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var _response$data, _response$data2;\n\n        var setErrors, response, errorMap;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref.setErrors;\n                _context.next = 3;\n                return updateUser({\n                  variables: {\n                    input: values\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.updateUser.errors) {\n                  errorMap = toErrorMap(response.data.updateUser.errors);\n                  setErrors(errorMap);\n                } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.updateUser.user) {\n                  console.log(response.data);\n                  router.push(\"/\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      flex: \"1\",\n      mr: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, __jsx(InputField, {\n      name: \"name\",\n      placeholder: \"name\",\n      label: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"title\",\n      placeholder: \"title\",\n      label: \"Title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"company\",\n      placeholder: \"company\",\n      label: \"Company\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, __jsx(ProfessionSelectField, {\n      label: \"Catagory\",\n      name: \"catagory\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"address\",\n      placeholder: \"address\",\n      label: \"Address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"city\",\n      placeholder: \"city\",\n      label: \"City\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"state\",\n      placeholder: \"state\",\n      label: \"State\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"zip\",\n      placeholder: \"zip\",\n      label: \"Zip\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }))), __jsx(Box, {\n      flex: \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, __jsx(InputField, {\n      name: \"twitter\",\n      placeholder: \"twitter\",\n      label: \"Twitter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"facebook\",\n      placeholder: \"facebook\",\n      label: \"Facebook\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"website\",\n      placeholder: \"website\",\n      label: \"Website\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, __jsx(InputField, {\n      name: \"linkedIn\",\n      placeholder: \"linkedIn\",\n      label: \"LinkedIn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }))), __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      background: \"blue\",\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Finish Signup\"));\n  })));\n};\n\n_s(Finish, \"T+DdvCuJ4oxuy/20TNJqNeeE3Xk=\", false, function () {\n  return [useUpdateUserMutation, useRouter];\n});\n\n_c = Finish;\nexport default withApollo({\n  ssr: false\n})(Finish);\n\nvar _c;\n\n$RefreshReg$(_c, \"Finish\");","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/pages/finish.tsx"],"names":["React","Box","Button","Formik","Form","useRouter","InputField","ProfessionSelectField","useUpdateUserMutation","toErrorMap","withApollo","Wrapper","Cookies","Finish","updateUser","router","name","get","remove","address","city","state","zip","title","catagory","company","twitter","facebook","website","linkedIn","DefaultTemplates","values","setErrors","variables","input","response","data","errors","errorMap","user","console","log","push","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Box, Text, Button, useToast, Flex, Spacer } from \"@chakra-ui/react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useRouter } from \"next/router\";\r\nimport { InputField } from \"../components/Inputs/InputField\";\r\nimport { ProfessionSelectField } from \"../components/Inputs/ProfessionSelect\";\r\nimport { useUpdateUserMutation } from \"../generated/graphql\";\r\nimport { toErrorMap } from \"../utils/toErrorMap\";\r\nimport { withApollo } from \"../utils/withApollo\";\r\nimport { Wrapper } from \"../components/Wrapper\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Finish = () => {\r\n  const [updateUser] = useUpdateUserMutation();\r\n  const router = useRouter();\r\n  let name = \"\";\r\n  if (Cookies.get(\"name\")) {\r\n    name = Cookies.get(\"name\")!;\r\n  }\r\n  Cookies.remove(\"name\");\r\n  return (\r\n    <Wrapper variant=\"small\">\r\n      <Box mb={6} pr={12}>\r\n        <Formik\r\n          initialValues={{\r\n            name: name,\r\n            address: \"\",\r\n            city: \"\",\r\n            state: \"\",\r\n            zip: \"\",\r\n            title: \"\",\r\n            catagory: \"\",\r\n            company: \"\",\r\n            twitter: \"\",\r\n            facebook: \"\",\r\n            website: \"\",\r\n            linkedIn: \"\",\r\n            DefaultTemplates: false,\r\n          }}\r\n          onSubmit={async (values, { setErrors }) => {\r\n            const response = await updateUser({\r\n              variables: {\r\n                input: values,\r\n              },\r\n            });\r\n\r\n            if (response.data?.updateUser.errors) {\r\n              const errorMap = toErrorMap(response.data.updateUser.errors);\r\n\r\n              setErrors(errorMap);\r\n            } else if (response.data?.updateUser.user) {\r\n              console.log(response.data);\r\n\r\n              router.push(\"/\");\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <Box flex=\"1\" mr={6}>\r\n                <InputField name=\"name\" placeholder=\"name\" label=\"Name\" />\r\n                <Box mt={4}>\r\n                  <InputField name=\"title\" placeholder=\"title\" label=\"Title\" />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <InputField\r\n                    name=\"company\"\r\n                    placeholder=\"company\"\r\n                    label=\"Company\"\r\n                  />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <ProfessionSelectField label=\"Catagory\" name=\"catagory\" />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <InputField\r\n                    name=\"address\"\r\n                    \r\n                    placeholder=\"address\"\r\n                    label=\"Address\"\r\n                  />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <InputField name=\"city\" placeholder=\"city\" label=\"City\" />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <InputField name=\"state\" placeholder=\"state\" label=\"State\" />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <InputField name=\"zip\" placeholder=\"zip\" label=\"Zip\" />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box flex=\"1\">\r\n                <InputField\r\n                  name=\"twitter\"\r\n                  placeholder=\"twitter\"\r\n                  label=\"Twitter\"\r\n                />\r\n                <Box mt={4}>\r\n                  <InputField\r\n                    name=\"facebook\"\r\n                    placeholder=\"facebook\"\r\n                    label=\"Facebook\"\r\n                  />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <InputField\r\n                    name=\"website\"\r\n                    placeholder=\"website\"\r\n                    label=\"Website\"\r\n                  />\r\n                </Box>\r\n                <Box mt={4}>\r\n                  <InputField\r\n                    name=\"linkedIn\"\r\n                    placeholder=\"linkedIn\"\r\n                    label=\"LinkedIn\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Button\r\n                mt={4}\r\n                type=\"submit\"\r\n                isLoading={isSubmitting}\r\n                background=\"blue\"\r\n                color=\"white\"\r\n              >\r\n                Finish Signup\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default withApollo({ ssr: false })(Finish);\r\n"]},"metadata":{},"sourceType":"module"}