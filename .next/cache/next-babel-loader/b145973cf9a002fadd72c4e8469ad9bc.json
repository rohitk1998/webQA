{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\Subscriber\\\\docImport.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Button, Box, Flex, useToast, Text, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, useDisclosure } from \"@chakra-ui/react\";\n\nvar _require = require(\"react-excel-renderer\"),\n    ExcelRenderer = _require.ExcelRenderer;\n\nimport { useDropzone } from \"react-dropzone\";\nimport DetailsDropDown from \"./DetailsDropDown\";\n\nvar parser = require(\"fast-xml-parser\");\n\nimport { useCreateSubMutation } from \"../../generated/graphql\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nexport var DocImport = function DocImport(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useCreateSubMutation = useCreateSubMutation(),\n      _useCreateSubMutation2 = _slicedToArray(_useCreateSubMutation, 1),\n      createSub = _useCreateSubMutation2[0];\n\n  var _useState = useState([]),\n      File = _useState[0],\n      setFile = _useState[1];\n\n  var _useState2 = useState([]),\n      UploadFile = _useState2[0],\n      setUploadFile = _useState2[1];\n\n  var _useState3 = useState([]),\n      rows = _useState3[0],\n      setrows = _useState3[1];\n\n  var _useState4 = useState([]),\n      rows1 = _useState4[0],\n      setrows1 = _useState4[1];\n\n  var _useState5 = useState([]),\n      xml = _useState5[0],\n      setxml = _useState5[1];\n\n  var _useState6 = useState(false),\n      Loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      filename = _useState7[0],\n      setfilename = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      Firstname = _useState8[0],\n      setFirstname = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      Email = _useState9[0],\n      setEmail = _useState9[1];\n\n  var toast = useToast();\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var _useState10 = useState(\"\"),\n      RecordSize = _useState10[0],\n      setRecordSize = _useState10[1];\n\n  var clear = function clear() {\n    setFile([]);\n    setxml([]);\n    setfilename(\"\");\n    setrows([]);\n    setrows1([]);\n    setFirstname(\"\");\n    setEmail(\"\");\n    setRecordSize(\"\");\n  };\n\n  var onDrop = useCallback(function (acceptedFiles) {\n    setUploadFile(acceptedFiles);\n    setfilename(acceptedFiles[0].name);\n    setFirstname(\"\");\n    setEmail(\"\");\n    setrows([]);\n    setrows1([]);\n\n    if (acceptedFiles[0].type === \"text/xml\") {\n      var reader = new FileReader();\n      reader.readAsText(acceptedFiles[0]);\n\n      reader.onloadend = function (evt) {\n        var _evt$target;\n\n        var readerData = (_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.result;\n        var xml = parser.parse(readerData);\n        var val = xml[Object.keys(xml)[0]];\n        var val1 = val[Object.keys(val)[0]];\n        var val2 = val1[Object.keys(val1)[0]];\n        var val3 = Object.keys(val2);\n        setxml(val1);\n        setrows(val3);\n        setRecordSize(val1.length);\n        setrows1([]);\n        setFile([]);\n      };\n    } else {\n      ExcelRenderer(acceptedFiles[0], function (err, resp) {\n        console.log(\"excel\", resp.rows);\n\n        if (err) {\n          console.log(err);\n        } else {\n          var ExcelRows = [];\n          resp.rows.map(function (item) {\n            if (item.length !== 0) {\n              console.log(item);\n              ExcelRows.push(item);\n            }\n          });\n          var record = ExcelRows.length - 1;\n          setRecordSize(record.toString());\n          setFile(acceptedFiles);\n          setrows(ExcelRows[0]);\n          ExcelRows.shift();\n          setrows1(ExcelRows);\n          setxml([]);\n        }\n      });\n    }\n  }, []);\n\n  var childHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(valuesFromChild) {\n      var index, values, keyelement, arr, _keyelement, _arr, _arr2, _arr3;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              index = valuesFromChild.e.target.value;\n              values = valuesFromChild.name;\n\n              if (!(UploadFile[0].type === \"text/xml\")) {\n                _context2.next = 17;\n                break;\n              }\n\n              if (!(values === \"Name\")) {\n                _context2.next = 9;\n                break;\n              }\n\n              keyelement = rows[index];\n              arr = [];\n              xml.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.abrupt(\"return\", arr.push(item[keyelement]));\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              _context2.next = 9;\n              return setFirstname(arr.toString());\n\n            case 9:\n              if (!(values === \"Email\")) {\n                _context2.next = 15;\n                break;\n              }\n\n              _keyelement = rows[index];\n              _arr = [];\n              xml.map(function (item) {\n                return _arr.push(item[_keyelement]);\n              });\n              _context2.next = 15;\n              return setEmail(_arr.toString());\n\n            case 15:\n              _context2.next = 27;\n              break;\n\n            case 17:\n              if (!(values === \"Name\")) {\n                _context2.next = 22;\n                break;\n              }\n\n              _arr2 = [];\n              rows1.map(function (item) {\n                return _arr2.push(item[index]);\n              });\n              _context2.next = 22;\n              return setFirstname(_arr2.toString());\n\n            case 22:\n              if (!(values === \"Email\")) {\n                _context2.next = 27;\n                break;\n              }\n\n              _arr3 = [];\n              rows1.map(function (item) {\n                return _arr3.push(item[index]);\n              });\n              _context2.next = 27;\n              return setEmail(_arr3.toString());\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function childHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var uploadData = function uploadData() {\n    if (Firstname === \"\" || Email === \"\") {\n      toast({\n        title: \"Empty Feilds\",\n        status: \"warning\",\n        duration: 4000,\n        isClosable: true\n      });\n    } else {\n      setLoader(true);\n      var respones = createSub({\n        variables: {\n          input: {\n            name: Firstname,\n            email: Email\n          }\n        },\n        update: function update(cache, _ref4) {\n          var data = _ref4.data;\n\n          if (!(data !== null && data !== void 0 && data.createSub.errors)) {\n            cache.evict({\n              fieldName: \"subs:{}\"\n            });\n          }\n        }\n      }).then(function (res) {\n        if (res) {\n          var _res$data, _res$data2;\n\n          setLoader(false);\n\n          if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.createSub.errors) {\n            toErrorMap(res.data.createSub.errors);\n            toast({\n              title: \"Warning\",\n              status: \"warning\",\n              duration: 4000,\n              isClosable: true,\n              description: res.data.createSub.errors[0].message\n            });\n          } else if ((_res$data2 = res.data) !== null && _res$data2 !== void 0 && _res$data2.createSub.sub) {\n            toast({\n              title: \"Success\",\n              status: \"success\",\n              duration: 4000,\n              isClosable: true,\n              description: RecordSize + \" records uploaded\"\n            });\n            clear();\n            onClose;\n          }\n        }\n      });\n    }\n  };\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: onOpen,\n    ml: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"Import File\"), __jsx(Modal, {\n    size: \"4xl\",\n    colorScheme: \"whiteAlpha\",\n    isCentered: true,\n    blockScrollOnMount: false,\n    closeOnOverlayClick: false,\n    isOpen: isOpen,\n    onClose: onClose,\n    motionPreset: \"scale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, __jsx(ModalOverlay, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }), __jsx(ModalContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Import File\"), Loader === true ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    className: \"loader\",\n    src: \"/static/Loader.gif\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  })) : __jsx(React.Fragment, null, __jsx(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    w: \"100%\",\n    p: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, __jsx(Button, _extends({}, getRootProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }), \" \", __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  })), isDragActive ? __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 27\n    }\n  }, \"Drop the files here ...\") : __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, \"Drag 'n' drop file here, or click to select file\"))), __jsx(Button, {\n    onClick: clear,\n    colorScheme: \"teal\",\n    mr: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 23\n    }\n  }, \"Clear\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, \"First row should contain feilds name\"), __jsx(Flex, {\n    pt: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, RecordSize === \"\" ? \"\" : __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 27\n    }\n  }, filename), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 27\n    }\n  }, \"Total Records: \", RecordSize))), __jsx(DetailsDropDown, {\n    name: \"Name\",\n    options: rows,\n    action: childHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }), __jsx(DetailsDropDown, {\n    name: \"Email\",\n    options: rows,\n    action: childHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  })))), __jsx(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    mr: 2,\n    type: \"submit\",\n    background: \"blue\",\n    color: \"white\",\n    as: \"a\",\n    href: \"/static/sampletest.zip\",\n    download: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, \"Download samples\"), __jsx(Button, {\n    mr: 2,\n    type: \"submit\",\n    background: \"blue\",\n    color: \"white\",\n    onClick: uploadData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, \"Upload\"), __jsx(Button, {\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, \"Cancel\"))))));\n};\n\n_s(DocImport, \"H67ozXFrWRNoXKoGp7Xs1nfu+YQ=\", false, function () {\n  return [useCreateSubMutation, useToast, useDisclosure, useDropzone];\n});\n\n_c = DocImport;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocImport\");","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/Subscriber/docImport.tsx"],"names":["React","useState","useCallback","Button","Box","Flex","useToast","Text","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","useDisclosure","require","ExcelRenderer","useDropzone","DetailsDropDown","parser","useCreateSubMutation","toErrorMap","DocImport","createSub","File","setFile","UploadFile","setUploadFile","rows","setrows","rows1","setrows1","xml","setxml","Loader","setLoader","filename","setfilename","Firstname","setFirstname","Email","setEmail","toast","isOpen","onOpen","onClose","RecordSize","setRecordSize","clear","onDrop","acceptedFiles","name","type","reader","FileReader","readAsText","onloadend","evt","readerData","target","result","parse","val","Object","keys","val1","val2","val3","length","err","resp","console","log","ExcelRows","map","item","push","record","toString","shift","childHandler","valuesFromChild","index","e","value","values","keyelement","arr","uploadData","title","status","duration","isClosable","respones","variables","input","email","update","cache","data","errors","evict","fieldName","then","res","description","message","sub","getRootProps","getInputProps","isDragActive","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Flex,\r\n  useToast,\r\n  Text,\r\n  Spacer,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nconst { ExcelRenderer } = require(\"react-excel-renderer\");\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport DetailsDropDown from \"./DetailsDropDown\";\r\nconst parser = require(\"fast-xml-parser\");\r\nimport { useCreateSubMutation } from \"../../generated/graphql\";\r\nimport { toErrorMap } from \"../../utils/toErrorMap\";\r\n\r\nexport const DocImport: React.FC<{}> = ({}) => {\r\n  const [createSub] = useCreateSubMutation();\r\n  const [File, setFile] = useState([]);\r\n  const [UploadFile, setUploadFile] = useState([] as any);\r\n  const [rows, setrows] = useState([] as any);\r\n  const [rows1, setrows1] = useState([]);\r\n  const [xml, setxml] = useState([]);\r\n  const [Loader, setLoader] = useState(false);\r\n  const [filename, setfilename] = useState(\"\");\r\n  const [Firstname, setFirstname] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [RecordSize, setRecordSize] = useState(\"\");\r\n\r\n  const clear = () => {\r\n    setFile([]);\r\n    setxml([]);\r\n    setfilename(\"\");\r\n    setrows([]);\r\n    setrows1([]);\r\n    setFirstname(\"\");\r\n    setEmail(\"\");\r\n    setRecordSize(\"\");\r\n  };\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setUploadFile(acceptedFiles);\r\n    setfilename(acceptedFiles[0].name);\r\n    setFirstname(\"\");\r\n    setEmail(\"\");\r\n    setrows([]);\r\n    setrows1([]);\r\n    if (acceptedFiles[0].type === \"text/xml\") {\r\n      const reader = new FileReader();\r\n      reader.readAsText(acceptedFiles[0]);\r\n      reader.onloadend = (evt) => {\r\n        const readerData: any = evt.target?.result;\r\n        const xml = parser.parse(readerData);\r\n\r\n        const val = xml[Object.keys(xml)[0]];\r\n        const val1 = val[Object.keys(val)[0]];\r\n        const val2 = val1[Object.keys(val1)[0]];\r\n        const val3 = Object.keys(val2);\r\n        setxml(val1);\r\n        setrows(val3);\r\n        setRecordSize(val1.length);\r\n        setrows1([]);\r\n        setFile([]);\r\n      };\r\n    } else {\r\n      ExcelRenderer(acceptedFiles[0], (err: any, resp: any) => {\r\n        console.log(\"excel\", resp.rows);\r\n        if (err) {\r\n          console.log(err);\r\n        } else {\r\n          let ExcelRows: any = [];\r\n          resp.rows.map((item: any) => {\r\n            if (item.length !== 0) {\r\n              console.log(item);\r\n              ExcelRows.push(item);\r\n            }\r\n          });\r\n          let record = ExcelRows.length - 1;\r\n          setRecordSize(record.toString());\r\n          setFile(acceptedFiles);\r\n          setrows(ExcelRows[0]);\r\n          ExcelRows.shift();\r\n          setrows1(ExcelRows);\r\n          setxml([]);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const childHandler = async (valuesFromChild: any) => {\r\n    let index = valuesFromChild.e.target.value;\r\n    let values = valuesFromChild.name;\r\n    if (UploadFile[0].type === \"text/xml\") {\r\n      if (values === \"Name\") {\r\n        const keyelement = rows[index];\r\n        let arr: any = [];\r\n        xml.map(async (item: any) => arr.push(item[keyelement]));\r\n        await setFirstname(arr.toString());\r\n      }\r\n      if (values === \"Email\") {\r\n        const keyelement = rows[index];\r\n        let arr: any = [];\r\n        xml.map((item: any) => arr.push(item[keyelement]));\r\n        await setEmail(arr.toString());\r\n      }\r\n    } else {\r\n      if (values === \"Name\") {\r\n        let arr: any = [];\r\n        rows1.map((item) => arr.push(item[index]));\r\n        await setFirstname(arr.toString());\r\n      }\r\n      if (values === \"Email\") {\r\n        let arr: any = [];\r\n        rows1.map((item) => arr.push(item[index]));\r\n        await setEmail(arr.toString());\r\n      }\r\n    }\r\n  };\r\n\r\n  const uploadData = () => {\r\n    if (Firstname === \"\" || Email === \"\") {\r\n      toast({\r\n        title: \"Empty Feilds\",\r\n        status: \"warning\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      setLoader(true);\r\n      const respones = createSub({\r\n        variables: {\r\n          input: {\r\n            name: Firstname,\r\n            email: Email,\r\n          },\r\n        },\r\n        update: (cache, { data }) => {\r\n          if (!data?.createSub.errors) {\r\n            cache.evict({ fieldName: \"subs:{}\" });\r\n          }\r\n        },\r\n      }).then((res) => {\r\n        if (res) {\r\n          setLoader(false);\r\n          if (res.data?.createSub.errors) {\r\n            toErrorMap(res.data.createSub.errors);\r\n            toast({\r\n              title: \"Warning\",\r\n              status: \"warning\",\r\n              duration: 4000,\r\n              isClosable: true,\r\n              description: res.data.createSub.errors[0].message,\r\n            });\r\n          } else if (res.data?.createSub.sub) {\r\n            toast({\r\n              title: \"Success\",\r\n              status: \"success\",\r\n              duration: 4000,\r\n              isClosable: true,\r\n              description: RecordSize + \" records uploaded\",\r\n            });\r\n            clear();\r\n            onClose;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  return (\r\n    <>\r\n      <Button onClick={onOpen} ml=\"3\">\r\n        Import File\r\n      </Button>\r\n\r\n      <Modal\r\n        size=\"4xl\"\r\n        colorScheme=\"whiteAlpha\"\r\n        isCentered\r\n        blockScrollOnMount={false}\r\n        closeOnOverlayClick={false}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        motionPreset=\"scale\"\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Import File</ModalHeader>\r\n\r\n          {Loader === true ? (\r\n            <div>\r\n              <img className=\"loader\" src=\"/static/Loader.gif\" />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <ModalBody>\r\n                <Flex>\r\n                  <Box w=\"100%\" p={4}>\r\n                    <Box\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Button {...getRootProps()}>\r\n                        {\" \"}\r\n                        <input {...getInputProps()} />\r\n                        {isDragActive ? (\r\n                          <p>Drop the files here ...</p>\r\n                        ) : (\r\n                          <>\r\n                            <p>\r\n                              Drag 'n' drop file here, or click to select file\r\n                            </p>\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                      <Button onClick={clear} colorScheme=\"teal\" mr=\"4\">\r\n                        Clear\r\n                      </Button>\r\n                    </Box>\r\n                    <br />\r\n                    <p>First row should contain feilds name</p>\r\n\r\n                    <Flex pt=\"2\">\r\n                      {RecordSize === \"\" ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <Box>\r\n                          <Text>{filename}</Text>\r\n                          <Text>Total Records: {RecordSize}</Text>\r\n                        </Box>\r\n                      )}\r\n                    </Flex>\r\n\r\n                    <DetailsDropDown\r\n                      name=\"Name\"\r\n                      options={rows}\r\n                      action={childHandler}\r\n                    />\r\n                    <DetailsDropDown\r\n                      name=\"Email\"\r\n                      options={rows}\r\n                      action={childHandler}\r\n                    />\r\n                  </Box>\r\n                </Flex>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  mr={2}\r\n                  type=\"submit\"\r\n                  background=\"blue\"\r\n                  color=\"white\"\r\n                  as=\"a\"\r\n                  href=\"/static/sampletest.zip\"\r\n                  download\r\n                >\r\n                  Download samples\r\n                </Button>\r\n                <Button\r\n                  mr={2}\r\n                  type=\"submit\"\r\n                  background=\"blue\"\r\n                  color=\"white\"\r\n                  onClick={uploadData}\r\n                >\r\n                  Upload\r\n                </Button>\r\n\r\n                <Button onClick={onClose}>Cancel</Button>\r\n              </ModalFooter>\r\n            </>\r\n          )}\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}