{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Development\\\\QA\\\\OldQA\\\\web\\\\src\\\\components\\\\Inputs\\\\SwitchField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useField } from 'formik';\nimport { FormControl, FormLabel, FormErrorMessage, Switch } from '@chakra-ui/react';\nexport var SwitchField = function SwitchField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, label), __jsx(Switch, _extends({\n    id: field.name\n  }, field, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }\n  }, error) : null);\n};\n\n_s(SwitchField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = SwitchField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchField\");","map":{"version":3,"sources":["D:/Development/QA/OldQA/web/src/components/Inputs/SwitchField.tsx"],"names":["React","useField","FormControl","FormLabel","FormErrorMessage","Switch","SwitchField","label","props","field","error","name"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,MAJF,QAKO,kBALP;AAaA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAGjD;AAAA;;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,KACC;;AAAA,kBACuBP,QAAQ,CAACO,KAAD,CAD/B;AAAA;AAAA,MACGC,KADH;AAAA,MACYC,KADZ,iBACYA,KADZ;;AAGJ,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAiC,IAAA,OAAO,EAAC,MAAzC;AAAgD,IAAA,UAAU,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCJ,KAAjC,CADF,EAEE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAEE,KAAK,CAACE;AAAlB,KAA4BF,KAA5B,EAAuCD,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGE,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH1D,CADF;AAOD,CAbM;;GAAMJ,W;UAIgBL,Q;;;KAJhBK,W","sourcesContent":["import React from 'react';\r\nimport { useField } from 'formik';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Switch,\r\n} from '@chakra-ui/react';\r\n\r\ntype SwitchFieldProps = {\r\n  label: string;\r\n  name: string;\r\n  defaultIsChecked: boolean;\r\n};\r\n\r\nexport const SwitchField: React.FC<SwitchFieldProps> = ({\r\n  label,\r\n  ...props\r\n}) => {\r\n  const [field, { error }] = useField(props);\r\n\r\n  return (\r\n    <FormControl isInvalid={!!error} display='flex' alignItems='center'>\r\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\r\n      <Switch id={field.name} {...field} {...props} />\r\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\r\n    </FormControl>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}